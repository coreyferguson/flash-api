
service: flashcards-api # NOTE: update this with your service name
frameworkVersion: "=1.44.1"

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: us-west-2
  environment:
    cardsTableName: flashcards-api-cards-${self:custom.stage}
    decksTableName: flashcards-api-decks-${self:custom.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-west-2:*:*"

functions:
  authenticated:
    handler: handler.authenticated
    events:
      - http:
          path: /authenticated
          method: GET
          authorizer: aws_iam
          cors: true

  unauthenticated:
    handler: handler.unauthenticated
    events:
      - http:
          path: /unauthenticated
          method: GET
          cors: true

resources:
  Resources:

    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          # Enable CORS for gateway errors
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'

    cardsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${provider:environment.cardsTableName}
        AttributeDefinitions:
          - AttributeName: deck
            AttributeType: S
          - AttributeName: id
            AttributeType: S
          - AttributeName: frequencyAndLastTestTime
            AttributeType: S
        KeySchema:
          - AttributeName: deck
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: FrequencyIndex
            KeySchema:
              - AttributeName: deck
                KeyType: HASH
              - AttributeName: frequencyAndLastTestTime
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1

    decksTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${provider:environment.decksTableName}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
