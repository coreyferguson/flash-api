
service: flash-api # NOTE: update this with your service name
frameworkVersion: "=1.44.1"

custom:
  tableNames:
    cards: flash-api-cards-${self:provider.stage}

provider:
  name: aws
  runtime: nodejs10.x
  stage: ${opt:stage, env:stage, 'dev'}
  region: us-west-2
  environment:
    cardsTableName: ${self:custom.tableNames.cards}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-west-2:*:*"

functions:
  graphql:
    handler: src/graphql/handler.graphqlHandler
    events:
    - http:
        path: /graphql
        method: POST
        authorizer:
          name: authorizer
          arn: ${file(./serverless-${self:provider.stage}.yml):apiGatewayAuthorizerArn}
        cors: true
    - http:
        path: /graphql
        method: GET
        cors: true

resources:
  Resources:

    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          # Enable CORS so errors in headers from API Gateway are available to client
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'

    cardsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableNames.cards}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: id
            AttributeType: S
          - AttributeName: deck
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: DeckIndex
            KeySchema:
              - AttributeName: deck
                KeyType: HASH
              - AttributeName: id
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1

    LambdaPermission:
      Type: AWS::Lambda::Permission
      Properties:
        Action: lambda:InvokeFunction
        FunctionName: LogsToElasticsearch_overattribution-logs
        Principal: logs.us-west-2.amazonaws.com
        SourceAccount: 863138142000
        SourceArn: arn:aws:logs:us-west-2:863138142000:log-group:/aws/lambda/flash-api-dev-graphql:*

    CloudWatchToElasticSearchSubscriptionFilter:
      Type: AWS::Logs::SubscriptionFilter
      Properties:
        DestinationArn: arn:aws:lambda:us-west-2:863138142000:function:LogsToElasticsearch_overattribution-logs
        FilterPattern: ""
        LogGroupName: /aws/lambda/flash-api-dev-graphql
      DependsOn: LambdaPermission
